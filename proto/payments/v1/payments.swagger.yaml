swagger: "2.0"
info:
  title: payments/v1/payments.proto
  version: version not set
tags:
  - name: PaymentService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/payments/deposit:
    post:
      summary: Deposit processes a deposit request.
      description: |-
        This method expects a POST request with the user's ID and the amount to be deposited.

        Request:
          - `user_id`: The ID of the user making the deposit.
          - `amount`: The amount to be deposited.

        Response:
          - `transaction_id`: The ID of the transaction.
          - `status`: The status of the deposit (e.g., "success", "failure").
          - `message`: Additional information about the transaction.

        Possible HTTP responses:
          - 200: The deposit was successfully processed.
          - 400: The request was malformed, usually due to missing or invalid parameters.
          - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
          - 500: Internal server error, indicating a problem on the server side.
      operationId: PaymentService_Deposit
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DepositRequest'
      tags:
        - PaymentService
  /v1/payments/real-time-transaction:
    post:
      summary: RealTimeTransaction processes transactions in real-time.
      description: |-
        This method expects a bidirectional stream of transactions to be processed in real-time.

        Request/Response (streaming):
          - `transaction_id`: The ID of the transaction.
          - `user_id`: The ID of the user associated with the transaction.
          - `amount`: The amount involved in the transaction.
          - `type`: The type of transaction (e.g., "deposit", "withdrawal").
          - `status`: The status of the transaction.
          - `timestamp`: The timestamp of when the transaction occurred.

        Possible HTTP responses:
          - 200: The transactions were successfully processed.
          - 400: The request was malformed, usually due to missing or invalid parameters.
          - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
          - 500: Internal server error, indicating a problem on the server side.
      operationId: PaymentService_RealTimeTransaction
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1Transaction'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1Transaction
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: ' (streaming inputs)'
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Transaction'
      tags:
        - PaymentService
  /v1/payments/transaction-history/{user_id}:
    get:
      summary: GetTransactionHistory retrieves the transaction history for a user.
      description: |-
        This method expects a GET request with the user's ID as a path parameter.

        Request:
          - `user_id`: The ID of the user whose transaction history is being retrieved.

        Response (streaming):
          - `transaction_id`: The ID of the transaction.
          - `user_id`: The ID of the user associated with the transaction.
          - `amount`: The amount involved in the transaction.
          - `type`: The type of transaction (e.g., "deposit", "withdrawal").
          - `status`: The status of the transaction.
          - `timestamp`: The timestamp of when the transaction occurred.

        Possible HTTP responses:
          - 200: The transaction history was successfully retrieved.
          - 400: The request was malformed, usually due to missing or invalid parameters.
          - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
          - 500: Internal server error, indicating a problem on the server side.
      operationId: PaymentService_GetTransactionHistory
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1Transaction'
              error:
                $ref: '#/definitions/rpcStatus'
            title: Stream result of v1Transaction
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user_id
          description: The ID of the user whose transaction history is being retrieved.
          in: path
          required: true
          type: string
      tags:
        - PaymentService
  /v1/payments/upload-transactions:
    post:
      summary: UploadTransactions uploads multiple transactions for processing.
      description: |-
        This method expects a POST request with a list of transactions to be processed.

        Request:
          - `transactions`: A list of transactions to be uploaded.

        Response:
          - `success_count`: The number of transactions successfully processed.
          - `failure_count`: The number of transactions that failed to process.
          - `errors`: A list of error messages for the failed transactions.

        Possible HTTP responses:
          - 200: The transactions were successfully uploaded.
          - 400: The request was malformed, usually due to missing or invalid parameters.
          - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
          - 500: Internal server error, indicating a problem on the server side.
      operationId: PaymentService_UploadTransactions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UploadTransactionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: transactions
          description: A list of transactions to be uploaded. (streaming inputs)
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/v1Transaction'
      tags:
        - PaymentService
  /v1/payments/withdraw:
    post:
      summary: Withdraw processes a withdrawal request.
      description: |-
        This method expects a POST request with the user's ID and the amount to be withdrawn.

        Request:
          - `user_id`: The ID of the user making the withdrawal.
          - `amount`: The amount to be withdrawn.

        Response:
          - `transaction_id`: The ID of the transaction.
          - `status`: The status of the withdrawal (e.g., "success", "failure").
          - `message`: Additional information about the transaction.

        Possible HTTP responses:
          - 200: The withdrawal was successfully processed.
          - 400: The request was malformed, usually due to missing or invalid parameters.
          - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
          - 500: Internal server error, indicating a problem on the server side.
      operationId: PaymentService_Withdraw
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1WithdrawResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1WithdrawRequest'
      tags:
        - PaymentService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1DepositRequest:
    type: object
    properties:
      user_id:
        type: string
        description: The ID of the user making the deposit.
      amount:
        type: number
        format: double
        description: The amount to be deposited.
    title: Messages for deposit
  v1DepositResponse:
    type: object
    properties:
      transaction_id:
        type: string
        description: The ID of the transaction.
      status:
        type: string
        description: The status of the deposit (e.g., "success", "failure").
      message:
        type: string
        description: Additional information about the transaction.
  v1Transaction:
    type: object
    properties:
      transaction_id:
        type: string
        description: The ID of the transaction.
      user_id:
        type: string
        description: The ID of the user associated with the transaction.
      amount:
        type: number
        format: double
        description: The amount involved in the transaction.
      type:
        type: string
        description: The type of transaction (e.g., "deposit", "withdrawal").
      status:
        type: string
        description: The status of the transaction.
      timestamp:
        type: string
        description: The timestamp of when the transaction occurred.
  v1UploadTransactionsResponse:
    type: object
    properties:
      success_count:
        type: integer
        format: int32
        description: The number of transactions successfully processed.
      failure_count:
        type: integer
        format: int32
        description: The number of transactions that failed to process.
      errors:
        type: array
        items:
          type: string
        description: A list of error messages for the failed transactions.
  v1WithdrawRequest:
    type: object
    properties:
      user_id:
        type: string
        description: The ID of the user making the withdrawal.
      amount:
        type: number
        format: double
        description: The amount to be withdrawn.
    title: Messages for withdrawal
  v1WithdrawResponse:
    type: object
    properties:
      transaction_id:
        type: string
        description: The ID of the transaction.
      status:
        type: string
        description: The status of the withdrawal (e.g., "success", "failure").
      message:
        type: string
        description: Additional information about the transaction.
