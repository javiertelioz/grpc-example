// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file helloworld/v1/helloworld.proto (package helloworld.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GreeterServiceSayHelloRequest, GreeterServiceSayHelloResponse } from "./helloworld_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * GreeterService provides a simple greeting API.
 *
 * @generated from service helloworld.v1.GreeterService
 */
export const GreeterService = {
  typeName: "helloworld.v1.GreeterService",
  methods: {
    /**
     * SayHello sends a greeting message to the user.
     *
     * This method expects a GET request with the user's name as a path parameter.
     * The server will respond with a greeting message.
     *
     * Request:
     *   - `name`: The name of the person to greet. This should be passed as a path parameter.
     *
     * Response:
     *   - `message`: A greeting message that includes the user's name.
     *
     * Possible HTTP responses:
     *   - 200: The request was successful, and a greeting message is returned.
     *   - 400: The request was malformed, usually because the 'name' parameter is missing.
     *   - 401: Unauthorized request, typically due to missing or invalid authentication credentials.
     *   - 500: Internal server error, indicating a problem on the server side.
     *
     * Example:
     *   GET /v1/helloworld/John
     *
     * Response:
     *   {
     *     "message": "Hello, John!"
     *   }
     *
     * @generated from rpc helloworld.v1.GreeterService.SayHello
     */
    sayHello: {
      name: "SayHello",
      I: GreeterServiceSayHelloRequest,
      O: GreeterServiceSayHelloResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

